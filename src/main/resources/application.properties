server.port=8989
#spring.datasource.url=jdbc:mysql://192.168.114.128:3306/game
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
#spring.datasource.url=jdbc:mysql://192.168.239.51:3306/utopa
spring.datasource.url=jdbc:mysql://184.170.215.28:3306/redpacket
#spring.datasource.username=gtland
#spring.datasource.password=gtland
spring.datasource.username=root
spring.datasource.password=redpacket
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
# 下面为连接池的补充设置，应用到上面所有数据源中
spring.datasource.initialSize=5
spring.datasource.minIdle=5
spring.datasource.maxActive=20
# 配置获取连接等待超时的时间
spring.datasource.maxWait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.minEvictableIdleTimeMillis=300000
spring.datasource.validationQuery=SELECT 1 FROM DUAL
spring.datasource.testWhileIdle=true
spring.datasource.testOnBorrow=false
spring.datasource.testOnReturn=false
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource.filters=stat,wall,slf4j
spring.datasource.logSlowSql=true

spring.thymeleaf.prefix=classpath:/templets/
spring.thymeleaf.mode=LEGACYHTML5

# mybatis
#mybatis.mapper-locations=classpath:/mapper/**/*Mapper.xml
mybatis-plus.mapperLocations=classpath:/mapper/**/*Mapper.xml
mybatis-plus.typeAliasesPackage=com.hdh.redpacket.*.model
mybatis-plus.configuration.map-underscore-to-camel-case=true

# redis
# Redis数据库索引（默认为0）
spring.redis.database=0
# Redis服务器地址
#spring.redis.host=192.168.239.51
spring.redis.host=184.170.215.28
# Redis服务器连接端口
spring.redis.port=26379
# Redis服务器连接密码（默认为空）
spring.redis.password=
# 连接池最大连接数（使用负值表示没有限制）
spring.redis.pool.max-active=8
# 连接池最大阻塞等待时间（使用负值表示没有限制）
spring.redis.pool.max-wait=-1
# 连接池中的最大空闲连接
spring.redis.pool.max-idle=8
# 连接池中的最小空闲连接
spring.redis.pool.min-idle=0
# 连接超时时间（毫秒）
spring.redis.timeout=5000

#logging.level.root=DEBUG
logging.level.root=INFO
logging.level.org.springframework.web=DEBUG
logging.level.org.hibernate=ERROR